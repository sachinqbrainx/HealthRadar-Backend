// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TalentSurvey.DBContexts;

#nullable disable

namespace TalentSurvey.Migrations
{
    [DbContext(typeof(TalentSurveyDbContext))]
    [Migration("20221129082617_intial")]
    partial class intial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TalentSurvey.CommandModel.ResponsedAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uuid");

                    b.Property<string>("RespondedAnswer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("TalentSurveyCommandModelUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TalentSurveyCommandModelUserId");

                    b.ToTable("ResponsedAnswer");
                });

            modelBuilder.Entity("TalentSurvey.CommandModel.TalentSurveyCommandModel", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Total")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("TalentSurveyTable");
                });

            modelBuilder.Entity("TalentSurvey.CommandModel.ResponsedAnswer", b =>
                {
                    b.HasOne("TalentSurvey.CommandModel.TalentSurveyCommandModel", null)
                        .WithMany("Response")
                        .HasForeignKey("TalentSurveyCommandModelUserId");
                });

            modelBuilder.Entity("TalentSurvey.CommandModel.TalentSurveyCommandModel", b =>
                {
                    b.Navigation("Response");
                });
#pragma warning restore 612, 618
        }
    }
}
