// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Revenue.DBContexts;

#nullable disable

namespace Revenue.Migrations
{
    [DbContext(typeof(RevenueDBContext))]
    partial class RevenueDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Revenue.CommandModel.DecisionMakingSurveyCommandModel", b =>
                {
                    b.Property<Guid>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("QuestionId");

                    b.ToTable("DecisionMakingSurveyQuestion");
                });

            modelBuilder.Entity("Revenue.CommandModel.DecisionMakingSurveyOptions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DecisionMakingSurveyCommandModelQuestionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DecisionMakingSurveyCommandModelQuestionId");

                    b.ToTable("DecisionMakingSurveyOptions");
                });

            modelBuilder.Entity("Revenue.CommandModel.TalentSurveyCommandModel", b =>
                {
                    b.Property<Guid>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("QuestionId");

                    b.ToTable("TalentSurveyQuestion");
                });

            modelBuilder.Entity("Revenue.CommandModel.TalentSurveyOptions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("TalentSurveyCommandModelQuestionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TalentSurveyCommandModelQuestionId");

                    b.ToTable("TalentSurveyOptions");
                });

            modelBuilder.Entity("Revenue.CommandModel.DecisionMakingSurveyOptions", b =>
                {
                    b.HasOne("Revenue.CommandModel.DecisionMakingSurveyCommandModel", null)
                        .WithMany("options")
                        .HasForeignKey("DecisionMakingSurveyCommandModelQuestionId");
                });

            modelBuilder.Entity("Revenue.CommandModel.TalentSurveyOptions", b =>
                {
                    b.HasOne("Revenue.CommandModel.TalentSurveyCommandModel", null)
                        .WithMany("options")
                        .HasForeignKey("TalentSurveyCommandModelQuestionId");
                });

            modelBuilder.Entity("Revenue.CommandModel.DecisionMakingSurveyCommandModel", b =>
                {
                    b.Navigation("options");
                });

            modelBuilder.Entity("Revenue.CommandModel.TalentSurveyCommandModel", b =>
                {
                    b.Navigation("options");
                });
#pragma warning restore 612, 618
        }
    }
}
